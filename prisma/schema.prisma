// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  alias     String?
  sessions  Session[]
  scores    Score[]
  feedbacks Feedback[]
}

model Session {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  Score     Score[]
  Feedback  Feedback[]
}

model Score {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  session    Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId  String
  composite  Int
  climate    Int
  biosphere  Int
  biochem    Int
  freshwater Int
  aerosol    Int
  novel      Int
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?
}

model Feedback {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
  rating    Int
  comment   String?
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model EventLog {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  sessionId String
  event     String
  payload   Json?
}
